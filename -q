"                          .__
"   ____   ____  _______  _|__| _____
"  /    \_/ __ \/  _ \  \/ /  |/     \
" |   |  \  ___(  <_> )   /|  |  Y Y  \
" |___|  /\___  >____/ \_/ |__|__|_|  /
"      \/     \/                    \/


" Secciones:
"   -> VimPlug
"   -> General
"   -> GUI
"   -> Colores y fuentes
"   -> Archivos, backups y deshacer
"   -> Texto, tabs e identaciones
"   -> Plugins
"   -> Miscelaneas
"   -> Funciones auxiliares
"   -> Atajos
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VimPlug
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'jiangmiao/auto-pairs'

Plug 'tpope/vim-endwise'

Plug 'neoclide/coc.nvim', {'branch': 'release'}

Plug 'mattn/emmet-vim'

Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'


Plug 'flazz/vim-colorschemes'

Plug 'jelera/vim-javascript-syntax'

Plug 'elzr/vim-json'

Plug 'maxmellon/vim-jsx-pretty'

Plug 'junegunn/fzf', { 'do': './install --bin' }
Plug 'junegunn/fzf.vim'

Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

Plug 'tpope/vim-obsession'

Plug 'logico/typewriter-vim'

Plug 'digitaltoad/vim-pug'

Plug 'evanleck/vim-svelte'

" Integración con ranger
"Plug 'rbgrouleff/bclose.vim'
"Plug 'francoiscabrol/ranger.vim'

Plug 'mhartington/oceanic-next'

Plug 'voldikss/vim-floaterm'

" Initialize plugin system
call plug#end()

" Source configuration
source $HOME/.config/nvim/plug-config/airline.vim
source $HOME/.config/nvim/plug-config/coc.vim
source $HOME/.config/nvim/plug-config/emmet.vim
source $HOME/.config/nvim/plug-config/floaterm.vim
source $HOME/.config/nvim/plug-config/fzf.vim


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Configuraciones generales
set nocompatible
command! MakeTags !ctags -R .

" Desactivar mouse
set mouse=
set mouse=""

" Activar plugins
filetype plugin on
filetype indent on

" Activar el lazy redraw
set lazyredraw
set ttyfast

" Ctrl-C es igual a Escape
inoremap <C-s> <Esc>

" Salvado rapido con ctrl+Z
noremap <C-Z> :update<CR>
vnoremap <C-Z> <C-C>:update<CR>
inoremap <C-Z> <C-O>:update<CR>

" La tecla coma como lider
let mapleader = ","

" Deshacer permanente
set undodir=~/.vim/undodir
set undofile

" Activar el corrector automático en archivos de texto
autocmd FileType markdown,gitcommit setlocal spell
autocmd FileType markdown,gitcommit setlocal spelllang=es

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => BUFFERS AND WINDOWS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Crear nueva pestaña
noremap <C-T> :tabnew<CR>

" Ir al próximo buffer
nmap <leader>l :bnext<CR>

" Ir al buffer previo
nmap <leader>h :bprevious<CR>

" Cerrar el buffer previo y abrir el anterior
nmap <leader>q :bp <BAR> bd #<CR>

" Maximiza el split actual
nmap <leader>m :res<CR>:vertical res<CR>
" Restaura el split actual
nmap <leader>s <C-w>=

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => GUI
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Crear las nuevas ventanas abajo y/o la derecha de la otra ventanas
set splitbelow
set splitright

" Activar el WiLd menu
set wildmenu

" Ignorar archivos compilados
set wildignore=*.o,*~,*.pyc,*.class
set wildignore+=**/node_modules/**
set wildignore+=**/_bower_components/**
set wildignore+=*.tmp
set wildignore+=**/vendor/**
set wildignore+=*.temp

" Iluminar par de corchete cuando se posa en la pareja
set showmatch
" Decimas de segundo que parpadea cuando se ilumina la pareja de corchetes
set mat=4

" Activa el modo hibrido de numeracion de linea
set number
"set relativenumber

" Ignorar la capitalizacion
set ignorecase

" Activar el smart case en la busqueda
set smartcase

" La busqueda se asemeja a los buscadores web
set incsearch

" Resaltar los resultados de la busqueda
set hlsearch

" Marcar el limite en la columna 80
set colorcolumn=84

" Quitar el resaltado de busqueda con Ctrl+h
nnoremap <C-h> :noh<cr>

" Entra en FOCUS mode
nmap <F12> :Goyo <bar> Limelight!!<CR>

inoremap <F9> <C-O>za
nnoremap <F9> za
onoremap <F9> <C-C>za
vnoremap <F9> zf

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colores y fuentes
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Usar tabla de caracteres UTF-8
set encoding=utf-8

" Activar coloreo de sintaxis
syntax on

" Usar la terminal con 256 colores
set t_Co=256
"set termguicolors


" COLORES OSCUROS
"set background=dark
"colorscheme typewriter-night


" COLORES CLAROS
 set background=light
 colorscheme typewriter

" => Iluminar la linea
set cursorline
" => Forzar negritas en la línea
"hi CursorLine term=bold cterm=bold guibg=bold
hi CursorLineNR ctermbg=254 guibg=254

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Archivos, backups y deshacer
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" No backup ni swap
set nobackup
set noswapfile

" Busca en los subdirectorios
set path+=**

" Actualiza el contenido de un archivo abierto cuando hubo cambios en otro
" editor
set autoread
au FocusGained,BufEnter * :checktime
au CursorHold,CursorHoldI * :checktime

" Actualiza manualmente el contenido del archivo
nmap <F5> :checktime<CR>

" Actualiza el contenido de un archivo abierto cuando hubo cambios en otro
autocmd CursorHold,CursorHoldI,FocusGained,BufEnter * checktime
autocmd FileChangedShellPost * echohl WarningMsg | echo "File changed on disk. Buffer reloaded" | echohl None

" File browsing
let g:netrw_banner=0        " disable banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
let g:netrw_list_hide=netrw_gitignore#Hide() " hide gitignore'd files
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+' " hide dotfiles by default (this is the string toggled by netrw-gh)

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Texto, tabs, identaciones y varios
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Usar el clipboard del sistema para copiar y pegar.
"set clipboard^=unnamed
set clipboard+=unnamedplus

" Sacar - y _ como parte de palabra
set iskeyword-=_

" Usar espacios en vez de tabs
set expandtab

" Cada TAB inserta 4 espacios (estandar)
set shiftwidth=2
set softtabstop=2

" Si es javascript inserta 2 espacios
au FileType javascript setl ts=2 sw=2 sts=2
au FileType html setl ts=2 sw=2 sts=2
au FileType pug setl ts=2 sw=2 sts=2

autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" Tabs inteligentes
set smarttab

" Siempre identa a un numero multiplo de shiftwidth
set shiftround

" Corta la linea a las 79 columnas visualmente
set textwidth=83
set wrap
set showbreak=↪\ 
set linebreak
set nolist
set formatoptions-=t

" Autocompletado
inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>
set omnifunc=syntaxcomplete#Complete
set dictionary+=/usr/share/dict/words
set completeopt+=longest

" Utilizar TAB para el autocompletado
function! Tab_Or_Complete()
    if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
        "return "\<C-N>"
        return "\<Down>"
    else
        return "\<Down>"
        "return "\<Tab>"
    endif
endfunction

" Desactivar autofold en markdown
let g:vim_markdown_folding_disabled = 1


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" delimitMate
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let delimitMate_expand_cr = 2
let delimitMate_expand_space = 1


" vim-javascript
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 let g:javascript_ignore_javaScriptdoc = 1
 let g:javascript_enable_domhtmlcss = 1


" vim-jsx
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 let g:jsx_ext_required = 0 " Permite JSX dentro de archivos JS

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Miscelaneas
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Reemplazar la primer ocurrencia de la palabra bajo el cursor. Usar . para
" cambiar la siguiente ocurrencia. Usar n para saltar a la siguiente ocurrencia
" sin modificar
nnoremap <leader>c *Ncgn

" No hacer nada con las teclas direccionales
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" En modo visual presionando * o # busca la palabra seleccionada
vnoremap <silent> * :call VisualSelection('f')<CR>
vnoremap <silent> # :call VisualSelection('b')<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Funciones auxiliares
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

function! VisualSelection(direction) range
    let l:saved_reg = @"
    execute "normal! vgvy"

    let l:pattern = escape(@", '\\/.*$^~[]')
    let l:pattern = substitute(l:pattern, "\n$", "", "")

    if a:direction == 'b'
        execute "normal ?" . l:pattern . "^M"
    elseif a:direction == 'gv'
        call CmdLine("vimgrep " . '/'. l:pattern . '/' . ' **/*.')
    elseif a:direction == 'replace'
        call CmdLine("%s" . '/'. l:pattern . '/')
    elseif a:direction == 'f'
        execute "normal /" . l:pattern . "^M"
    endif

    let @/ = l:pattern
    let @" = l:saved_reg
endfunction

function! Get_visual_selection() range
    " Why is this not a built-in Vim script function?!
    let [line_start, column_start] = getpos("'<")[1:2]
    let [line_end, column_end] = getpos("'>")[1:2]
    let lines = getline(line_start, line_end)
    if len(lines) == 0
        return ''
    endif
    let lines[-1] = lines[-1][: column_end - (&selection == 'inclusive' ? 1 : 2)]
    let lines[0] = lines[0][column_start - 1:]
    let out = join(lines, "\n")
    let x = "!chromium 'https://duckduckgo.com/?q=" . out . "&t=canonical&ia=web' 1&>/dev/null"
    silent execute x
    return out
endfunction

" Cambia el cursor cuando entra en INSERT mode
let &t_SI = "\033]12;#528BFF\x7\e[5 q"
let &t_EI = "\033]12;#528BFF\x7\e[1 q"
let &t_SR = "\033]12;deeppink1\x7\e[3 q"

augroup myCmds
  au!
  autocmd VimEnter * silent !echo -ne "\033]12;royalblue1\x7\e[1 q"
augroup END


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => ATAJOS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Buscar en duckduckgo la seleccion visual
vnoremap s :call Get_visual_selection()<CR>


" Floaterm
nmap <Leader>r :FloatermNew vifm<CR>
nmap <Leader>t :FloatermNew<CR>

" FZF
xmap <leader>b :Buffers<Enter>
nmap <leader>b :Buffers<Enter>

nmap <leader>, :call fzf#run(fzf#wrap({'source': 'git ls-files --exclude-standard --others --cached'}))<Enter>

nmap <Leader>r :FloatermNew vifm<CR>
nmap <Leader>t :FloatermNew<CR>


" COC
xmap <leader>f  :Prettier<Enter>
nmap <leader>f  :Prettier<Enter>

